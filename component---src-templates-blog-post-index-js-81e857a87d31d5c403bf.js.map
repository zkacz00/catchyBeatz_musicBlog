{"version":3,"file":"component---src-templates-blog-post-index-js-81e857a87d31d5c403bf.js","mappings":"wLAyDA,MArDwBA,IAAoG,IAAnG,MAAEC,EAAK,OAAEC,EAAM,KAAEC,EAAI,YAAEC,EAAW,SAAEC,EAAQ,QAAEC,EAAO,gBAAEC,EAAe,KAAEC,EAAI,cAAEC,GAAeT,EAEnH,MAAM,OACHU,EAAM,eACNC,EAAc,cACdC,EAAa,aACbC,EAAY,YACZC,GACCC,EAAAA,EAEJ,OACGC,EAAAA,cAACN,EAAM,KACJM,EAAAA,cAAA,OAAKC,UAAU,YACZD,EAAAA,cAAA,OAAKC,UAAU,qBACZD,EAAAA,cAACL,EAAc,MACfK,EAAAA,cAAA,OAAKC,UAAU,YACZD,EAAAA,cAAA,OAAKC,UAAU,qBACZD,EAAAA,cAAA,OAAKC,UAAU,oBACZD,EAAAA,cAAA,SAAId,GACJc,EAAAA,cAAA,SAAG,KACHA,EAAAA,cAAA,SAAIb,GACJa,EAAAA,cAAA,SAAG,KACHA,EAAAA,cAAA,SAAIZ,EAAY,cAEnBY,EAAAA,cAAA,WACAA,EAAAA,cAAA,UAAKf,GAEFiB,KAAKC,MAAMZ,EAAgBa,KAAKC,QAAQC,KAAI,CAACC,EAAIC,IAE3CR,EAAAA,cAAA,OAAKS,IAAKD,IACNE,EAAAA,EAAAA,GAA0BH,EAAId,MAK3CO,EAAAA,cAAA,WACAA,EAAAA,cAAA,OAAKC,UAAU,oBACZD,EAAAA,cAAA,SAAIX,EAASsB,eACbX,EAAAA,cAAA,WACGA,EAAAA,cAACH,EAAY,CAACe,UAAW,MACzBZ,EAAAA,cAACJ,EAAa,CAACgB,UAAWtB,QAMtCU,EAAAA,cAACF,EAAW,CAACe,YAAarB,MAG1B,E,oBCEf,MAlDiBR,IAAgC,IAA9B8B,aAAc,SAACC,IAAU/B,EAEzC,MA6BMgC,GA7BOC,EAAAA,EAAAA,gBAAe,cA6BFC,wBAAwBC,MAAMC,QAAOC,GAAQA,EAAKC,KAAK9B,OAASuB,IAAU,GAAGO,KAEjG7B,EAAgB,CACnB8B,WAAY,CACT,CAACC,EAAAA,OAAOC,WAAY,CAACH,EAAMI,IAAa1B,EAAAA,cAAA,KAAGC,UAAU,kBAAkByB,GACvE,CAACF,EAAAA,OAAOG,OAAQ,CAACL,EAAMI,IAAa1B,EAAAA,cAAA,OAAKC,UAAU,uBAAuByB,GAC1E,CAACF,EAAAA,OAAOI,gBAAkBN,IACvB,MAAMO,EAAMb,EAAazB,gBAAgBuC,WAAWC,MAAKvB,GAAKA,EAAEwB,gBAAkBV,EAAKW,KAAKC,OAAOC,IAAIC,KACvG,OACGpC,EAAAA,cAAA,OAAKqC,IAAKR,aAAG,EAAHA,EAAKS,IAAKC,IAAKV,aAAG,EAAHA,EAAK5C,OAAS,IAKnD,OACGe,EAAAA,cAACwC,EAAeC,OAAAC,OAAA,GAAK1B,EAAY,CAAEvB,cAAeA,IAAiB,C","sources":["webpack://project4/./src/templates/BlogPost/blogPostContent.js","webpack://project4/./src/templates/BlogPost/index.js"],"sourcesContent":["import React from 'react';\nimport components from '../../components';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nconst BlogPostContent = ({ title, author, date, readingTime, category, likesNr, blogPostContent, slug, renderOptions }) => {\n\n   const {\n      Layout,\n      BlogNavigation,\n      HeartsCounter,\n      ViewsCounter,\n      RecentPosts,\n   } = components;\n\n   return (\n      <Layout>\n         <div className=\"blogPage\">\n            <div className=\"blogPage__content\">\n               <BlogNavigation />\n               <div className=\"blogPost\">\n                  <div className=\"blogPost__content\">\n                     <div className=\"blogPost__header\">\n                        <p>{author}</p>\n                        <p>&bull;</p>\n                        <p>{date}</p>\n                        <p>&bull;</p>\n                        <p>{readingTime} min read</p>\n                     </div>\n                     <hr />\n                     <h1>{title}</h1>\n                     {\n                        JSON.parse(blogPostContent.raw).content.map((el, i) => {\n                           return (\n                              <div key={i}>\n                                 {documentToReactComponents(el, renderOptions)}\n                              </div>\n                           )\n                        })\n                     }\n                     <hr />\n                     <div className=\"blogPost__footer\">\n                        <p>{category.toUpperCase()}</p>                                \n                        <div>\n                           <ViewsCounter baseCount={140} />\n                           <HeartsCounter baseCount={likesNr} />\n                        </div>\n                        \n                     </div>\n                  </div>                  \n               </div>\n               <RecentPosts currentSlug={slug} />\n            </div>\n         </div>\n      </Layout>\n   )\n}\n\nexport default BlogPostContent;","import React from \"react\"\nimport BlogPostContent from './blogPostContent';\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { BLOCKS } from \"@contentful/rich-text-types\";\n\nconst BlogPost = ({pageContext : {pagePath}}) => {\n\n   const data = useStaticQuery(\n      graphql`\n         query {\n            allContentfulBlogPostEl {\n               edges {\n                  node {\n                     id,\n                     slug,\n                     title,\n                     author,\n                     date(formatString: \"MMM D, YYYY\"),\n                     readingTime,\n                     category,\n                     likesNr,\n                     blogPostContent { \n                        raw,\n                        references {\n                          title\n                          url\n                          contentful_id\n                        }\n                     }\n                  }\n               }\n            }\n         }\n      `\n   );\n\n   const blogPostData = data.allContentfulBlogPostEl.edges.filter(edge => edge.node.slug === pagePath)[0].node;\n\n   const renderOptions = {\n      renderNode: {\n         [BLOCKS.PARAGRAPH]: (node, children) => <p className=\"blogPost__text\">{children}</p>,\n         [BLOCKS.QUOTE]: (node, children) => <div className=\"blogPost__highlight\">{children}</div>,\n         [BLOCKS.EMBEDDED_ASSET]: (node) => {\n            const img = blogPostData.blogPostContent.references.find(i => i.contentful_id === node.data.target.sys.id);\n            return (\n               <img src={img?.url} alt={img?.title} />\n         )}\n      },\n   };\n\n   return (\n      <BlogPostContent {...blogPostData} renderOptions={renderOptions} />\n   )\n}\n\nexport default BlogPost;"],"names":["_ref","title","author","date","readingTime","category","likesNr","blogPostContent","slug","renderOptions","Layout","BlogNavigation","HeartsCounter","ViewsCounter","RecentPosts","components","React","className","JSON","parse","raw","content","map","el","i","key","documentToReactComponents","toUpperCase","baseCount","currentSlug","pageContext","pagePath","blogPostData","useStaticQuery","allContentfulBlogPostEl","edges","filter","edge","node","renderNode","BLOCKS","PARAGRAPH","children","QUOTE","EMBEDDED_ASSET","img","references","find","contentful_id","data","target","sys","id","src","url","alt","BlogPostContent","Object","assign"],"sourceRoot":""}